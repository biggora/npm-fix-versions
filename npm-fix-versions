#!/usr/bin/env node
/**
 * Created by Alex on 6/18/2016.
 */
var fs = require('fs');
var semver = require('semver');
var program = require('commander');
var fixPkg = require('./package.json');

exports.scan = function (projectDir, params) {
    var project_dir = projectDir || __dirname;
    var modules_dir = project_dir + '/node_modules';
    var project_pkg;

    try {
        project_pkg = require(project_dir + '/package.json');
    } catch (e) {
        console.log('ERR: This is not project directory ' + project_dir);
        process.exit(1);
    }

    if (project_pkg.dependencies && params.production) {
        Object.keys(project_pkg.dependencies).forEach(function (dep) {
            var module_dir = modules_dir + '/' + dep;
            try {
                var pkg = require(module_dir + '/package.json');
                var ver = pkg.version.split('-')[0];
                ver = semver.valid(ver);
                project_pkg.dependencies[dep] = params.comparator + ver;
            } catch (e) {
                console.log('WARN: module ' + dep, 'in dependencies not found in node_modules');
            }
        });
    }

    if (project_pkg.devDependencies && params.dev) {
        Object.keys(project_pkg.devDependencies).forEach(function (dep) {
            var module_dir = modules_dir + '/' + dep;
            try {
                var pkg = require(module_dir + '/package.json');
                var ver = pkg.version.split('-')[0];
                ver = semver.valid(ver);
                project_pkg.devDependencies[dep] = params.comparator + ver;
            } catch (e) {
                console.log('WARN: module ' + dep, 'in devDependencies not found in node_modules');
            }
        });
    }

    if (project_pkg.optionalDependencies && params.optional) {
        Object.keys(project_pkg.optionalDependencies).forEach(function (dep) {
            var module_dir = modules_dir + '/' + dep;
            try {
                var pkg = require(module_dir + '/package.json');
                var ver = pkg.version.split('-')[0];
                ver = semver.valid(ver);
                project_pkg.optionalDependencies[dep] = params.comparator + ver;
            } catch (e) {
                console.log('WARN: module ' + dep, 'in optionalDependencies not found in node_modules');
            }
        });
    }

    fs.writeFileSync(project_dir + '/package.json', JSON.stringify(project_pkg, null, 4));
};

if (!module.parent) {

    program
        .version(fixPkg.version)
        .option('-c, --comparator', 'Add comparator', '^')
        .option('-p, --production', 'Add production dependencies')
        .option('-d, --dev', 'Add dev dependencies')
        .option('-o, --optional', 'Add optional dependencies')
        .parse(process.argv);

    if (!program.dev && !program.optional) {
        program.production = true;
    }

    if (program.comparator) {
        exports.scan(null, program);
    } else {
        program.help();
    }
}